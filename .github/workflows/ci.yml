name: CI Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests and Linting
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: nature_admin
          POSTGRES_PASSWORD: NewN&Aweb25
          POSTGRES_DB: nature_animaux_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U nature_admin"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    # 1. Checkout le code du repo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Setup Python (GitHub Actions propose déjà un environnement Python)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    # 3. Installer les dépendances sans créer un venv manuellement
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # ✅ Installation depuis la racine

    # 4. Vérifier si django-cors-headers est bien installé
    - name: Check installed packages
      run: |
        pip show django-cors-headers || (echo "❌ django-cors-headers non installé !" && exit 1)

    # 5. Attendre que PostgreSQL et MongoDB soient prêts
    - name: Wait for PostgreSQL and MongoDB
      run: |
        while ! nc -z localhost 5432; do sleep 1; done
        while ! nc -z localhost 27017; do sleep 1; done

    # 6. Vérifier si Django démarre sans erreurs
    - name: Run Django check
      run: |
        cd backend
        python manage.py check  # ✅ Vérifie si Django peut démarrer

    # 7. Exécuter les migrations
    - name: Run migrations
      run: |
        cd backend
        python manage.py migrate

    # 8. Lancer les tests unitaires
    - name: Run unit tests
      run: |
        cd backend
        python manage.py test
